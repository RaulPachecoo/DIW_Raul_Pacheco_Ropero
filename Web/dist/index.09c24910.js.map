{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["// Script para reproducir audio de testimonios\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\nconst playButtons = document.querySelectorAll('.play-button');\r\nlet currentAudio = null;\r\n\r\nplayButtons.forEach(button => {\r\n    button.addEventListener('click', () => {\r\n        const audioSrc = button.getAttribute('data-audio');\r\n        if (currentAudio && !currentAudio.paused) {\r\n            currentAudio.pause();\r\n            currentAudio.currentTime = 0;\r\n        }\r\n        currentAudio = new Audio(audioSrc);\r\n        currentAudio.play();\r\n    });\r\n});\r\n\r\n// Script para navegación de testimonios\r\nconst reviewsContainer = document.querySelector(\".reviews\");\r\nconst reviews = document.querySelectorAll(\".review\");\r\nconst leftButton = document.querySelector(\".nav-button.left\");\r\nconst rightButton = document.querySelector(\".nav-button.right\");\r\nlet currentIndex = 0;\r\n\r\nconst updateReviewsPosition = () => {\r\n    const offset = currentIndex * -100;\r\n    reviewsContainer.style.transform = `translateX(${offset}%)`;\r\n};\r\n\r\nleftButton.addEventListener(\"click\", () => {\r\n    currentIndex = (currentIndex - 1 + reviews.length) % reviews.length;\r\n    updateReviewsPosition();\r\n});\r\n\r\nrightButton.addEventListener(\"click\", () => {\r\n    currentIndex = (currentIndex + 1) % reviews.length;\r\n    updateReviewsPosition();\r\n});\r\n\r\n// Script para adaptar las imágenes en la sección \"¿Por qué FitEssence?\"\r\nconst whyImages = document.querySelectorAll(\".why-fitessence .why-image picture\");\r\n\r\nwhyImages.forEach(picture => {\r\n    const sourceAvif = picture.querySelector(\"source[type='image/avif']\");\r\n    const sourceWebp = picture.querySelector(\"source[type='image/webp']\");\r\n    const img = picture.querySelector(\"img\");\r\n\r\n    // Definir imágenes disponibles según tamaño\r\n    const imagenes = [\r\n        { ancho: 800, avif: img.src.replace(\"1920px.jpg\", \"1920px.avif\"), webp: img.src.replace(\"1920px.jpg\", \"1920px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"1920px.jpg\") },\r\n        { ancho: 768, avif: img.src.replace(\"1920px.jpg\", \"768px.avif\"), webp: img.src.replace(\"1920px.jpg\", \"768px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"768px.jpg\") },\r\n        { ancho: 480, avif: img.src.replace(\"1920px.jpg\", \"480px.avif\"), webp: img.src.replace(\"1920px.jpg\", \"480px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"480px.jpg\") }\r\n    ];\r\n\r\n    // Función para cambiar la imagen según el tamaño del contenedor\r\n    const cambiarImagen = (anchoContenedor) => {\r\n        const imagenSeleccionada = imagenes.find(img => anchoContenedor >= img.ancho);\r\n        if (img.dataset.actual === imagenSeleccionada.jpg) return;\r\n        sourceAvif.srcset = imagenSeleccionada.avif;\r\n        sourceWebp.srcset = imagenSeleccionada.webp;\r\n        img.src = imagenSeleccionada.jpg;\r\n        img.dataset.actual = imagenSeleccionada.jpg;\r\n    };\r\n\r\n    // Observar cambios en el tamaño del contenedor\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n        for (let entry of entries) {\r\n            cambiarImagen(entry.contentRect.width);\r\n        }\r\n    });\r\n\r\n    resizeObserver.observe(picture);\r\n});\r\n\r\n}); \r\n\r\n// Script para adaptar imágenes de entrenamientos\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const trainingCards = document.querySelectorAll(\".training-card picture\");\r\n\r\n    trainingCards.forEach(picture => {\r\n        const sourceAvif = picture.querySelector(\"source[type='image/avif']\");\r\n        const sourceWebp = picture.querySelector(\"source[type='image/webp']\");\r\n        const img = picture.querySelector(\"img\");\r\n\r\n        // Definir los tamaños de imagen disponibles\r\n        const imagenes = [\r\n            { ancho: 2560, avif: img.src.replace(\"480px.jpg\", \"3820px.avif\"), webp: img.src.replace(\"480px.jpg\", \"3820px.webp\"), jpg: img.src.replace(\"480px.jpg\", \"3820px.jpg\") },\r\n            { ancho: 2560, avif: img.src.replace(\"480px.jpg\", \"2560px.avif\"), webp: img.src.replace(\"480px.jpg\", \"2560px.webp\"), jpg: img.src.replace(\"480px.jpg\", \"2560px.jpg\") },\r\n            { ancho: 1920, avif: img.src.replace(\"480px.jpg\", \"1920px.avif\"), webp: img.src.replace(\"480px.jpg\", \"1920px.webp\"), jpg: img.src.replace(\"480px.jpg\", \"1920px.jpg\") },\r\n            { ancho: 1200, avif: img.src.replace(\"480px.jpg\", \"1200px.avif\"), webp: img.src.replace(\"480px.jpg\", \"1200px.webp\"), jpg: img.src.replace(\"480px.jpg\", \"1200px.jpg\") },\r\n            { ancho: 768, avif: img.src.replace(\"480px.jpg\", \"768px.avif\"), webp: img.src.replace(\"480px.jpg\", \"768px.webp\"), jpg: img.src.replace(\"480px.jpg\", \"768px.jpg\") }\r\n        ];\r\n\r\n        // Función para cambiar la imagen según el ancho del contenedor\r\n        const cambiarImagen = (anchoContenedor) => {\r\n            const imagenSeleccionada = imagenes.find(img => anchoContenedor >= img.ancho);\r\n\r\n            if (img.dataset.actual === imagenSeleccionada.jpg) return;\r\n\r\n            sourceAvif.srcset = imagenSeleccionada.avif;\r\n            sourceWebp.srcset = imagenSeleccionada.webp;\r\n            img.src = imagenSeleccionada.jpg;\r\n            img.dataset.actual = imagenSeleccionada.jpg;\r\n        };\r\n\r\n        // Observar cambios en el tamaño del contenedor\r\n        const resizeObserver = new ResizeObserver(entries => {\r\n            for (let entry of entries) {\r\n                cambiarImagen(entry.contentRect.width);\r\n            }\r\n        });\r\n\r\n        resizeObserver.observe(picture);\r\n    });\r\n});\r\n\r\n// Script para adaptar imágenes de logros\r\nconst achievements = document.querySelectorAll(\".achievement-card picture\");\r\n\r\nachievements.forEach(picture => {\r\n    const sourceAvif = picture.querySelector(\"source[type='image/avif']\");\r\n    const sourceWebp = picture.querySelector(\"source[type='image/webp']\");\r\n    const img = picture.querySelector(\"img\");\r\n\r\n    // Definir imágenes disponibles según tamaño, incluyendo tamaños de 1200px, 1920px, 2560px y 3820px\r\n    const imagenes = [\r\n        { ancho: 3820, avif: img.src.replace(\"1920px.avif\", \"3820px.avif\"), webp: img.src.replace(\"1920px.webp\", \"3820px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"3820px.jpg\") },\r\n        { ancho: 2560, avif: img.src.replace(\"1920px.avif\", \"2560px.avif\"), webp: img.src.replace(\"1920px.webp\", \"2560px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"2560px.jpg\") },\r\n        { ancho: 1920, avif: img.src.replace(\"1920px.avif\", \"1920px.avif\"), webp: img.src.replace(\"1920px.webp\", \"1920px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"1920px.jpg\") },\r\n        { ancho: 1200, avif: img.src.replace(\"1920px.avif\", \"1200px.avif\"), webp: img.src.replace(\"1920px.webp\", \"1200px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"1200px.jpg\") },\r\n        { ancho: 768, avif: img.src.replace(\"1920px.avif\", \"768px.avif\"), webp: img.src.replace(\"1920px.webp\", \"768px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"768px.jpg\") },\r\n        { ancho: 480, avif: img.src.replace(\"1920px.avif\", \"480px.avif\"), webp: img.src.replace(\"1920px.webp\", \"480px.webp\"), jpg: img.src.replace(\"1920px.jpg\", \"480px.jpg\") }\r\n    ];\r\n\r\n    // Función para cambiar la imagen según el tamaño del contenedor\r\n    const cambiarImagen = (anchoContenedor) => {\r\n        const imagenSeleccionada = imagenes.find(img => anchoContenedor >= img.ancho);\r\n        if (img.dataset.actual === imagenSeleccionada.jpg) return;\r\n        sourceAvif.srcset = imagenSeleccionada.avif;\r\n        sourceWebp.srcset = imagenSeleccionada.webp;\r\n        img.src = imagenSeleccionada.jpg;\r\n        img.dataset.actual = imagenSeleccionada.jpg;\r\n    };\r\n\r\n    // Observar cambios en el tamaño del contenedor\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n        for (let entry of entries) {\r\n            cambiarImagen(entry.contentRect.width);\r\n        }\r\n    });\r\n\r\n    resizeObserver.observe(picture);\r\n});\r\n\r\n\r\nconst header = document.querySelector('.header');\r\nconst menuToggle = document.querySelector('.menu-toggle');\r\n\r\nmenuToggle.addEventListener('click', () => {\r\n    header.classList.toggle('active-menu'); // Activa o desactiva el menú\r\n});\r\n\r\n// JavaScript para manejar el carrusel\r\ndocument.querySelectorAll('.carousel-btn').forEach(button => {\r\n    button.addEventListener('click', () => {\r\n        const offset = button.classList.contains('right') ? 1 : -1;\r\n        const carousel = button.closest('.carousel-container').querySelector('.carousel-images');\r\n\r\n        // Desplaza el carrusel\r\n        carousel.scrollBy({\r\n            left: offset * carousel.offsetWidth * 0.3,\r\n            behavior: 'smooth'\r\n        });\r\n    });\r\n});\r\n\r\n\r\n// Seleccionar todos los botones \"add-btn\"\r\nconst addButtons = document.querySelectorAll(\".add-btn\");\r\n\r\n// Agregar un evento de clic a cada botón\r\naddButtons.forEach((button) => {\r\n    button.addEventListener(\"click\", (event) => {\r\n        // Encontrar la tabla más cercana al botón\r\n        const table = event.target.closest(\"article\").querySelector(\".training-table tbody\");\r\n        \r\n        // Crear una nueva fila con dos celdas editables\r\n        const newRow = document.createElement(\"tr\");\r\n        newRow.innerHTML = `\r\n            <td contenteditable=\"true\"></td>\r\n            <td contenteditable=\"true\"></td>\r\n        `;\r\n        \r\n        // Añadir la nueva fila al final de la tabla\r\n        table.appendChild(newRow);\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.09c24910.js.map","sourceRoot":"/__parcel_source_root/"}